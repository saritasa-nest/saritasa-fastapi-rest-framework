import contextlib

from .common_types import ContextType
from .exception_handlers import (
    http_exception_handler,
    pydantic_validation_error_exception_handler,
    validation_error_exception_handler,
)
from .exceptions import (
    NotFoundException,
    PermissionException,
    UnauthorizedException,
)
from .interactors import (
    AnyApiDataInteractor,
    ApiDataInteractor,
    ApiDataInteractorT,
    BaseHooksMixin,
    M2MCreateUpdateConfig,
)
from .permissions import (
    BasePermission,
    PermissionInstanceT,
    RequestData,
    UserT,
)
from .repositories import (
    AnnotationT,
    AnyApiRepositoryProtocol,
    APIModel,
    APIModelT,
    ApiRepositoryProtocol,
    ApiRepositoryProtocolT,
    LazyLoadedT,
    OrderingClauseT,
    SelectStatementT,
    WhereFilterT,
)
from .validators import (
    AnyGenericInput,
    AnyGenericOutput,
    ApiDataType,
    BaseModelListValidator,
    BaseModelValidator,
    BaseValidator,
    DatetimeValidator,
    GenericError,
    LOCType,
    NotEqualToValues,
    ObjectPKValidator,
    RegexValidator,
    TimeZoneValidator,
    UniqueByFieldValidator,
    UniqueConstraintType,
    ValidationError,
    ValidationErrorSchema,
    ValidationErrorType,
    ValidationMapType,
)
from .views import (
    DEFAULT_ERROR_RESPONSES,
    ActionResponsesMap,
    AnyBaseAPIView,
    AnyFilters,
    BaseAPIView,
    BaseAPIViewMeta,
    BaseAPIViewMixin,
    Context,
    CreateMixin,
    CreateSchema,
    DeleteMixin,
    DetailMixin,
    DetailSchema,
    Filters,
    FiltersT,
    ListMixin,
    ListSchema,
    PaginatedBaseModel,
    PaginatedResult,
    PaginationParams,
    ResponsesMap,
    UpdateMixin,
    UpdateSchema,
    action,
)

with contextlib.suppress(ImportError):
    from . import sqlalchemy

with contextlib.suppress(ImportError):
    from . import testing


__all__ = (
    "sqlalchemy",
    "testing",
    "ActionResponsesMap",
    "AnyBaseAPIView",
    "AnyFilters",
    "BaseAPIView",
    "BaseAPIViewMeta",
    "BaseAPIViewMixin",
    "Context",
    "CreateMixin",
    "CreateSchema",
    "DeleteMixin",
    "DetailMixin",
    "DetailSchema",
    "Filters",
    "FiltersT",
    "ListMixin",
    "ListSchema",
    "ResponsesMap",
    "UpdateMixin",
    "UpdateSchema",
    "action",
    "PaginatedBaseModel",
    "PaginatedResult",
    "PaginationParams",
    "AnyGenericInput",
    "AnyGenericOutput",
    "ApiDataType",
    "BaseModelListValidator",
    "BaseModelValidator",
    "UniqueConstraintType",
    "BaseValidator",
    "DatetimeValidator",
    "GenericError",
    "NotEqualToValues",
    "ObjectPKValidator",
    "RegexValidator",
    "TimeZoneValidator",
    "UniqueByFieldValidator",
    "ValidationErrorSchema",
    "ValidationErrorType",
    "ValidationError",
    "ValidationMapType",
    "LOCType",
    "AnnotationT",
    "AnyApiRepositoryProtocol",
    "APIModel",
    "APIModelT",
    "ApiRepositoryProtocol",
    "ApiRepositoryProtocolT",
    "LazyLoadedT",
    "OrderingClauseT",
    "SelectStatementT",
    "WhereFilterT",
    "AnyApiDataInteractor",
    "ApiDataInteractor",
    "ApiDataInteractorT",
    "BaseHooksMixin",
    "M2MCreateUpdateConfig",
    "BasePermission",
    "PermissionInstanceT",
    "RequestData",
    "UserT",
    "NotFoundException",
    "PermissionException",
    "UnauthorizedException",
    "ContextType",
    "DEFAULT_ERROR_RESPONSES",
    "http_exception_handler",
    "validation_error_exception_handler",
    "pydantic_validation_error_exception_handler",
)
